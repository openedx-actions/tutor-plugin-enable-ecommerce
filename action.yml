#------------------------------------------------------------------------------
# usage: Use tutor to enable the Open edX Ecommerce service plugin
#------------------------------------------------------------------------------
name: Open edX Tutor k8s enable Ecommerce plugin
description: Github Action to install and enable the Tutor plugin - Open edX Ecommerce service
branding:
  icon: 'cloud'
  color: 'orange'
inputs:
  namespace:
    description: 'The Kubernetes namesapce to which the Open edX platform environment will be deployed. Example: openedx-prod'
    required: true
    type: string
  secrets-s3-bucket-name:
    description: 'The name of the AWS S3 bucket containing your ecommerce-payment-processors.yml file'
    required: true
    type: string
  currency:
    description: 'The base currency for your ecommerce transactions. Default: USD'
    required: false
    type: string
    default: USD
  enabled-payment-processors:
    description: 'The list of card processors to enable for your site. Default: ["stripe", "paypal"]'
    required: false
    type: string
    default: '["stripe", "paypal"]'
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3.3.0

    # retrieve the MySQL connection parameters that we created in Terraform
    # and then stored in Kubernetes secrets. These include:
    #   MYSQL_HOST: mysql.app.mrionline.com
    #   MYSQL_PORT: "3306"
    #   ECOMMERCE_MYSQL_USERNAME: openedx
    #   ECOMMERCE_MYSQL_PASSWORD: **************
    #   MYSQL_ROOT_USERNAME: root
    #   MYSQL_ROOT_PASSWORD: *************
    - name: fetch MySQL configuration from Kubernetes secrets
      id: get-mysql-secret
      uses: openedx-actions/tutor-k8s-get-secret@v1.0.0
      with:
        eks-namespace: ${{ inputs.namespace }}
        eks-secret-name: mysql-ecommerce

    # retrieve the ecommerce payment processor configuration that
    # we scaffolded in Terraform and then stored in Kubernetes secrets. These include:
    #
    #  ECOMMERCE_CURRENCY: USD
    #  ECOMMERCE_ENABLE_IDENTITY_VERIFICATION: "true"
    #  ECOMMERCE_ENABLED_CLIENT_SIDE_PAYMENT_PROCESSORS: ""
    #  ECOMMERCE_ENABLED_PAYMENT_PROCESSORS: stripe, paypal
    #  ECOMMERCE_EXTRA_PAYMENT_PROCESSOR_CLASSES: ""
    #  ECOMMERCE_EXTRA_PIP_REQUIREMENTS: ""
    #  ECOMMERCE_PAYMENT_PROCESSORS: ""
    #
    - name: fetch ecommerce configuration from Kubernetes secrets
      id: get-ecommerce-secret
      uses: openedx-actions/tutor-k8s-get-secret@v1.0.0
      with:
        eks-namespace: ${{ inputs.namespace }}
        eks-secret-name: ecommerce-config

    - name: install ecommerce plugin
      id: install-plugin
      shell: bash
      run: pip install tutor-ecommerce

    - name: Attempt aws s3 download of ecommerce-payment-processors.yml
      id: download-aws-s3
      continue-on-error: true
      shell: bash
      run: |-
        aws s3 cp s3://${{ inputs.secrets-s3-bucket-name }}/ecommerce-payment-processors.yml ./

    - name: Initialize aws s3 with scaffold of ecommerce-payment-processors.yml
      id: upload-aws-s3
      if: ${{ failure() }}
      shell: bash
      run: |-
        echo "copying a scaffolded payment processor template file to s3://stepwisemath-global-prod-secrets/ecommerce-payment-processors.yml"
        aws s3 cp s3://${{ inputs.secrets-s3-bucket-name }}/ecommerce-payment-processors.yml ./

    - name: Enable and configure ecommerce plugin
      id: config-save
      shell: bash
      run: |-
        tutor plugins enable ecommerce
        tutor config save --set "ECOMMERCE_PAYMENT_PROCESSORS=$(cat ecommerce-payment-processors.yml)" \
                          --set 'ECOMMERCE_ENABLED_PAYMENT_PROCESSORS=${{ inputs.enabled-payment-processors }}' \
                          --set ECOMMERCE_CURRENCY="${{ inputs.currency }}" \
